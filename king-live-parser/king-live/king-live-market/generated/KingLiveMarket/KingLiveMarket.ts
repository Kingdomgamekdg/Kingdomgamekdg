// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class AcceptBid extends EthereumEvent {
  get params(): AcceptBid__Params {
    return new AcceptBid__Params(this);
  }
}

export class AcceptBid__Params {
  _event: AcceptBid;

  constructor(event: AcceptBid) {
    this._event = event;
  }

  get _itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _bidOrderId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _result(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class AdminMigrateData extends EthereumEvent {
  get params(): AdminMigrateData__Params {
    return new AdminMigrateData__Params(this);
  }
}

export class AdminMigrateData__Params {
  _event: AdminMigrateData;

  constructor(event: AdminMigrateData) {
    this._event = event;
  }

  get _itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _toContract(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Bid extends EthereumEvent {
  get params(): Bid__Params {
    return new Bid__Params(this);
  }
}

export class Bid__Params {
  _event: Bid;

  constructor(event: Bid) {
    this._event = event;
  }

  get _bidId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _itemId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _bidToken(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get _bidPrice(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get _expiration(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class Buy extends EthereumEvent {
  get params(): Buy__Params {
    return new Buy__Params(this);
  }
}

export class Buy__Params {
  _event: Buy;

  constructor(event: Buy) {
    this._event = event;
  }

  get _itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _quantity(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _paymentToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get _paymentAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class CancelBid extends EthereumEvent {
  get params(): CancelBid__Params {
    return new CancelBid__Params(this);
  }
}

export class CancelBid__Params {
  _event: CancelBid;

  constructor(event: CancelBid) {
    this._event = event;
  }

  get _itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _bidOrderId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _result(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class CancelListed extends EthereumEvent {
  get params(): CancelListed__Params {
    return new CancelListed__Params(this);
  }
}

export class CancelListed__Params {
  _event: CancelListed;

  constructor(event: CancelListed) {
    this._event = event;
  }

  get _itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FailedWithdraw extends EthereumEvent {
  get params(): FailedWithdraw__Params {
    return new FailedWithdraw__Params(this);
  }
}

export class FailedWithdraw__Params {
  _event: FailedWithdraw;

  constructor(event: FailedWithdraw) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get withdrawAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class List extends EthereumEvent {
  get params(): List__Params {
    return new List__Params(this);
  }
}

export class List__Params {
  _event: List;

  constructor(event: List) {
    this._event = event;
  }

  get _orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _mask(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _price(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get _paymentToken(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get _expiration(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class OwnershipTransferred extends EthereumEvent {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends EthereumEvent {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends EthereumEvent {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateBid extends EthereumEvent {
  get params(): UpdateBid__Params {
    return new UpdateBid__Params(this);
  }
}

export class UpdateBid__Params {
  _event: UpdateBid;

  constructor(event: UpdateBid) {
    this._event = event;
  }

  get _itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _bidId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _quantity(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _bidToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get _bidPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _expiration(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get _status(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class UpdateItem extends EthereumEvent {
  get params(): UpdateItem__Params {
    return new UpdateItem__Params(this);
  }
}

export class UpdateItem__Params {
  _event: UpdateItem;

  constructor(event: UpdateItem) {
    this._event = event;
  }

  get _itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _mask(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _paymentToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get _expiration(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Withdraw extends EthereumEvent {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get withdrawAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class KingLiveMarket__bidOrdersResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromAddress(this.value0));
    map.set("value1", EthereumValue.fromAddress(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    map.set("value3", EthereumValue.fromUnsignedBigInt(this.value3));
    map.set("value4", EthereumValue.fromUnsignedBigInt(this.value4));
    map.set("value5", EthereumValue.fromUnsignedBigInt(this.value5));
    map.set("value6", EthereumValue.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class KingLiveMarket__itemsResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromAddress(this.value0));
    map.set("value1", EthereumValue.fromAddress(this.value1));
    map.set("value2", EthereumValue.fromAddress(this.value2));
    map.set("value3", EthereumValue.fromUnsignedBigInt(this.value3));
    map.set("value4", EthereumValue.fromUnsignedBigInt(this.value4));
    map.set("value5", EthereumValue.fromUnsignedBigInt(this.value5));
    map.set("value6", EthereumValue.fromUnsignedBigInt(this.value6));
    map.set("value7", EthereumValue.fromUnsignedBigInt(this.value7));
    map.set("value8", EthereumValue.fromUnsignedBigInt(this.value8));
    map.set("value9", EthereumValue.fromUnsignedBigInt(this.value9));
    return map;
  }
}

export class KingLiveMarket extends SmartContract {
  static bind(address: Address): KingLiveMarket {
    return new KingLiveMarket("KingLiveMarket", address);
  }

  ZOOM_FEE(): BigInt {
    let result = super.call("ZOOM_FEE", []);

    return result[0].toBigInt();
  }

  try_ZOOM_FEE(): CallResult<BigInt> {
    let result = super.tryCall("ZOOM_FEE", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  ZOOM_KING_LIVE(): BigInt {
    let result = super.call("ZOOM_KING_LIVE", []);

    return result[0].toBigInt();
  }

  try_ZOOM_KING_LIVE(): CallResult<BigInt> {
    let result = super.tryCall("ZOOM_KING_LIVE", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  ZOOM_USDT(): BigInt {
    let result = super.call("ZOOM_USDT", []);

    return result[0].toBigInt();
  }

  try_ZOOM_USDT(): CallResult<BigInt> {
    let result = super.tryCall("ZOOM_USDT", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  acceptBid(_bidOrderId: BigInt): boolean {
    let result = super.call("acceptBid", [
      EthereumValue.fromUnsignedBigInt(_bidOrderId)
    ]);

    return result[0].toBoolean();
  }

  try_acceptBid(_bidOrderId: BigInt): CallResult<boolean> {
    let result = super.tryCall("acceptBid", [
      EthereumValue.fromUnsignedBigInt(_bidOrderId)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  artistLoyaltyFee(): BigInt {
    let result = super.call("artistLoyaltyFee", []);

    return result[0].toBigInt();
  }

  try_artistLoyaltyFee(): CallResult<BigInt> {
    let result = super.tryCall("artistLoyaltyFee", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  bidOrders(param0: BigInt): KingLiveMarket__bidOrdersResult {
    let result = super.call("bidOrders", [
      EthereumValue.fromUnsignedBigInt(param0)
    ]);

    return new KingLiveMarket__bidOrdersResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt()
    );
  }

  try_bidOrders(param0: BigInt): CallResult<KingLiveMarket__bidOrdersResult> {
    let result = super.tryCall("bidOrders", [
      EthereumValue.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new KingLiveMarket__bidOrdersResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt()
      )
    );
  }

  cancelBid(_bidOrderId: BigInt): boolean {
    let result = super.call("cancelBid", [
      EthereumValue.fromUnsignedBigInt(_bidOrderId)
    ]);

    return result[0].toBoolean();
  }

  try_cancelBid(_bidOrderId: BigInt): CallResult<boolean> {
    let result = super.tryCall("cancelBid", [
      EthereumValue.fromUnsignedBigInt(_bidOrderId)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  cancelListed(_itemId: BigInt): boolean {
    let result = super.call("cancelListed", [
      EthereumValue.fromUnsignedBigInt(_itemId)
    ]);

    return result[0].toBoolean();
  }

  try_cancelListed(_itemId: BigInt): CallResult<boolean> {
    let result = super.tryCall("cancelListed", [
      EthereumValue.fromUnsignedBigInt(_itemId)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  check(): Bytes {
    let result = super.call("check", []);

    return result[0].toBytes();
  }

  try_check(): CallResult<Bytes> {
    let result = super.tryCall("check", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBytes());
  }

  farmingContract(): Address {
    let result = super.call("farmingContract", []);

    return result[0].toAddress();
  }

  try_farmingContract(): CallResult<Address> {
    let result = super.tryCall("farmingContract", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  firstSellFee(): BigInt {
    let result = super.call("firstSellFee", []);

    return result[0].toBigInt();
  }

  try_firstSellFee(): CallResult<BigInt> {
    let result = super.tryCall("firstSellFee", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  items(param0: BigInt): KingLiveMarket__itemsResult {
    let result = super.call("items", [
      EthereumValue.fromUnsignedBigInt(param0)
    ]);

    return new KingLiveMarket__itemsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt()
    );
  }

  try_items(param0: BigInt): CallResult<KingLiveMarket__itemsResult> {
    let result = super.tryCall("items", [
      EthereumValue.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new KingLiveMarket__itemsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt()
      )
    );
  }

  kingLiveExchangeContract(): Address {
    let result = super.call("kingLiveExchangeContract", []);

    return result[0].toAddress();
  }

  try_kingLiveExchangeContract(): CallResult<Address> {
    let result = super.tryCall("kingLiveExchangeContract", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  lastSalePrice(param0: Address, param1: BigInt): BigInt {
    let result = super.call("lastSalePrice", [
      EthereumValue.fromAddress(param0),
      EthereumValue.fromUnsignedBigInt(param1)
    ]);

    return result[0].toBigInt();
  }

  try_lastSalePrice(param0: Address, param1: BigInt): CallResult<BigInt> {
    let result = super.tryCall("lastSalePrice", [
      EthereumValue.fromAddress(param0),
      EthereumValue.fromUnsignedBigInt(param1)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  list(
    _tokenAddress: Address,
    _tokenId: BigInt,
    _quantity: BigInt,
    _mask: BigInt,
    _price: BigInt,
    _paymentToken: Address,
    _expiration: BigInt
  ): BigInt {
    let result = super.call("list", [
      EthereumValue.fromAddress(_tokenAddress),
      EthereumValue.fromUnsignedBigInt(_tokenId),
      EthereumValue.fromUnsignedBigInt(_quantity),
      EthereumValue.fromUnsignedBigInt(_mask),
      EthereumValue.fromUnsignedBigInt(_price),
      EthereumValue.fromAddress(_paymentToken),
      EthereumValue.fromUnsignedBigInt(_expiration)
    ]);

    return result[0].toBigInt();
  }

  try_list(
    _tokenAddress: Address,
    _tokenId: BigInt,
    _quantity: BigInt,
    _mask: BigInt,
    _price: BigInt,
    _paymentToken: Address,
    _expiration: BigInt
  ): CallResult<BigInt> {
    let result = super.tryCall("list", [
      EthereumValue.fromAddress(_tokenAddress),
      EthereumValue.fromUnsignedBigInt(_tokenId),
      EthereumValue.fromUnsignedBigInt(_quantity),
      EthereumValue.fromUnsignedBigInt(_mask),
      EthereumValue.fromUnsignedBigInt(_price),
      EthereumValue.fromAddress(_paymentToken),
      EthereumValue.fromUnsignedBigInt(_expiration)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  marketFee(): BigInt {
    let result = super.call("marketFee", []);

    return result[0].toBigInt();
  }

  try_marketFee(): CallResult<BigInt> {
    let result = super.tryCall("marketFee", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  numberBidOrders(): BigInt {
    let result = super.call("numberBidOrders", []);

    return result[0].toBigInt();
  }

  try_numberBidOrders(): CallResult<BigInt> {
    let result = super.tryCall("numberBidOrders", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  numberItems(): BigInt {
    let result = super.call("numberItems", []);

    return result[0].toBigInt();
  }

  try_numberItems(): CallResult<BigInt> {
    let result = super.tryCall("numberItems", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  onERC1155BatchReceived(
    operator: Address,
    from: Address,
    ids: Array<BigInt>,
    values: Array<BigInt>,
    data: Bytes
  ): Bytes {
    let result = super.call("onERC1155BatchReceived", [
      EthereumValue.fromAddress(operator),
      EthereumValue.fromAddress(from),
      EthereumValue.fromUnsignedBigIntArray(ids),
      EthereumValue.fromUnsignedBigIntArray(values),
      EthereumValue.fromBytes(data)
    ]);

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    operator: Address,
    from: Address,
    ids: Array<BigInt>,
    values: Array<BigInt>,
    data: Bytes
  ): CallResult<Bytes> {
    let result = super.tryCall("onERC1155BatchReceived", [
      EthereumValue.fromAddress(operator),
      EthereumValue.fromAddress(from),
      EthereumValue.fromUnsignedBigIntArray(ids),
      EthereumValue.fromUnsignedBigIntArray(values),
      EthereumValue.fromBytes(data)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    operator: Address,
    from: Address,
    id: BigInt,
    value: BigInt,
    data: Bytes
  ): Bytes {
    let result = super.call("onERC1155Received", [
      EthereumValue.fromAddress(operator),
      EthereumValue.fromAddress(from),
      EthereumValue.fromUnsignedBigInt(id),
      EthereumValue.fromUnsignedBigInt(value),
      EthereumValue.fromBytes(data)
    ]);

    return result[0].toBytes();
  }

  try_onERC1155Received(
    operator: Address,
    from: Address,
    id: BigInt,
    value: BigInt,
    data: Bytes
  ): CallResult<Bytes> {
    let result = super.tryCall("onERC1155Received", [
      EthereumValue.fromAddress(operator),
      EthereumValue.fromAddress(from),
      EthereumValue.fromUnsignedBigInt(id),
      EthereumValue.fromUnsignedBigInt(value),
      EthereumValue.fromBytes(data)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBytes());
  }

  owner(): Address {
    let result = super.call("owner", []);

    return result[0].toAddress();
  }

  try_owner(): CallResult<Address> {
    let result = super.tryCall("owner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", []);

    return result[0].toBoolean();
  }

  try_paused(): CallResult<boolean> {
    let result = super.tryCall("paused", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  referralContract(): Address {
    let result = super.call("referralContract", []);

    return result[0].toAddress();
  }

  try_referralContract(): CallResult<Address> {
    let result = super.tryCall("referralContract", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  referralFee(): BigInt {
    let result = super.call("referralFee", []);

    return result[0].toBigInt();
  }

  try_referralFee(): CallResult<BigInt> {
    let result = super.tryCall("referralFee", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  setFarmingContract(_farmingContract: Address): boolean {
    let result = super.call("setFarmingContract", [
      EthereumValue.fromAddress(_farmingContract)
    ]);

    return result[0].toBoolean();
  }

  try_setFarmingContract(_farmingContract: Address): CallResult<boolean> {
    let result = super.tryCall("setFarmingContract", [
      EthereumValue.fromAddress(_farmingContract)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  setKingLiveExchangeContract(_kingLiveExchangeContract: Address): boolean {
    let result = super.call("setKingLiveExchangeContract", [
      EthereumValue.fromAddress(_kingLiveExchangeContract)
    ]);

    return result[0].toBoolean();
  }

  try_setKingLiveExchangeContract(
    _kingLiveExchangeContract: Address
  ): CallResult<boolean> {
    let result = super.tryCall("setKingLiveExchangeContract", [
      EthereumValue.fromAddress(_kingLiveExchangeContract)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  setReferralContract(_referralContract: Address): boolean {
    let result = super.call("setReferralContract", [
      EthereumValue.fromAddress(_referralContract)
    ]);

    return result[0].toBoolean();
  }

  try_setReferralContract(_referralContract: Address): CallResult<boolean> {
    let result = super.tryCall("setReferralContract", [
      EthereumValue.fromAddress(_referralContract)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  setSystemFee(
    _marketFee: BigInt,
    _firstSellFee: BigInt,
    _artistLoyaltyFee: BigInt,
    _referralFee: BigInt
  ): boolean {
    let result = super.call("setSystemFee", [
      EthereumValue.fromUnsignedBigInt(_marketFee),
      EthereumValue.fromUnsignedBigInt(_firstSellFee),
      EthereumValue.fromUnsignedBigInt(_artistLoyaltyFee),
      EthereumValue.fromUnsignedBigInt(_referralFee)
    ]);

    return result[0].toBoolean();
  }

  try_setSystemFee(
    _marketFee: BigInt,
    _firstSellFee: BigInt,
    _artistLoyaltyFee: BigInt,
    _referralFee: BigInt
  ): CallResult<boolean> {
    let result = super.tryCall("setSystemFee", [
      EthereumValue.fromUnsignedBigInt(_marketFee),
      EthereumValue.fromUnsignedBigInt(_firstSellFee),
      EthereumValue.fromUnsignedBigInt(_artistLoyaltyFee),
      EthereumValue.fromUnsignedBigInt(_referralFee)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  setWhiteListPayableToken(_token: Address, _status: BigInt): boolean {
    let result = super.call("setWhiteListPayableToken", [
      EthereumValue.fromAddress(_token),
      EthereumValue.fromUnsignedBigInt(_status)
    ]);

    return result[0].toBoolean();
  }

  try_setWhiteListPayableToken(
    _token: Address,
    _status: BigInt
  ): CallResult<boolean> {
    let result = super.tryCall("setWhiteListPayableToken", [
      EthereumValue.fromAddress(_token),
      EthereumValue.fromUnsignedBigInt(_status)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call("supportsInterface", [
      EthereumValue.fromFixedBytes(interfaceId)
    ]);

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): CallResult<boolean> {
    let result = super.tryCall("supportsInterface", [
      EthereumValue.fromFixedBytes(interfaceId)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  updateBid(
    _bidId: BigInt,
    _quantity: BigInt,
    _bidToken: Address,
    _bidPrice: BigInt,
    _expiration: BigInt,
    _status: BigInt
  ): boolean {
    let result = super.call("updateBid", [
      EthereumValue.fromUnsignedBigInt(_bidId),
      EthereumValue.fromUnsignedBigInt(_quantity),
      EthereumValue.fromAddress(_bidToken),
      EthereumValue.fromUnsignedBigInt(_bidPrice),
      EthereumValue.fromUnsignedBigInt(_expiration),
      EthereumValue.fromUnsignedBigInt(_status)
    ]);

    return result[0].toBoolean();
  }

  try_updateBid(
    _bidId: BigInt,
    _quantity: BigInt,
    _bidToken: Address,
    _bidPrice: BigInt,
    _expiration: BigInt,
    _status: BigInt
  ): CallResult<boolean> {
    let result = super.tryCall("updateBid", [
      EthereumValue.fromUnsignedBigInt(_bidId),
      EthereumValue.fromUnsignedBigInt(_quantity),
      EthereumValue.fromAddress(_bidToken),
      EthereumValue.fromUnsignedBigInt(_bidPrice),
      EthereumValue.fromUnsignedBigInt(_expiration),
      EthereumValue.fromUnsignedBigInt(_status)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  updateItem(
    _itemId: BigInt,
    _mask: BigInt,
    _price: BigInt,
    _paymentToken: Address,
    _expiration: BigInt
  ): boolean {
    let result = super.call("updateItem", [
      EthereumValue.fromUnsignedBigInt(_itemId),
      EthereumValue.fromUnsignedBigInt(_mask),
      EthereumValue.fromUnsignedBigInt(_price),
      EthereumValue.fromAddress(_paymentToken),
      EthereumValue.fromUnsignedBigInt(_expiration)
    ]);

    return result[0].toBoolean();
  }

  try_updateItem(
    _itemId: BigInt,
    _mask: BigInt,
    _price: BigInt,
    _paymentToken: Address,
    _expiration: BigInt
  ): CallResult<boolean> {
    let result = super.tryCall("updateItem", [
      EthereumValue.fromUnsignedBigInt(_itemId),
      EthereumValue.fromUnsignedBigInt(_mask),
      EthereumValue.fromUnsignedBigInt(_price),
      EthereumValue.fromAddress(_paymentToken),
      EthereumValue.fromUnsignedBigInt(_expiration)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  whitelistPayableToken(param0: Address): BigInt {
    let result = super.call("whitelistPayableToken", [
      EthereumValue.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_whitelistPayableToken(param0: Address): CallResult<BigInt> {
    let result = super.tryCall("whitelistPayableToken", [
      EthereumValue.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptBidCall extends EthereumCall {
  get inputs(): AcceptBidCall__Inputs {
    return new AcceptBidCall__Inputs(this);
  }

  get outputs(): AcceptBidCall__Outputs {
    return new AcceptBidCall__Outputs(this);
  }
}

export class AcceptBidCall__Inputs {
  _call: AcceptBidCall;

  constructor(call: AcceptBidCall) {
    this._call = call;
  }

  get _bidOrderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptBidCall__Outputs {
  _call: AcceptBidCall;

  constructor(call: AcceptBidCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class AdminCancelListCall extends EthereumCall {
  get inputs(): AdminCancelListCall__Inputs {
    return new AdminCancelListCall__Inputs(this);
  }

  get outputs(): AdminCancelListCall__Outputs {
    return new AdminCancelListCall__Outputs(this);
  }
}

export class AdminCancelListCall__Inputs {
  _call: AdminCancelListCall;

  constructor(call: AdminCancelListCall) {
    this._call = call;
  }

  get _itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AdminCancelListCall__Outputs {
  _call: AdminCancelListCall;

  constructor(call: AdminCancelListCall) {
    this._call = call;
  }
}

export class AdminMigrateDataCall extends EthereumCall {
  get inputs(): AdminMigrateDataCall__Inputs {
    return new AdminMigrateDataCall__Inputs(this);
  }

  get outputs(): AdminMigrateDataCall__Outputs {
    return new AdminMigrateDataCall__Outputs(this);
  }
}

export class AdminMigrateDataCall__Inputs {
  _call: AdminMigrateDataCall;

  constructor(call: AdminMigrateDataCall) {
    this._call = call;
  }

  get _itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _paymentToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _expired(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _status(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _minBid(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get _mask(): BigInt {
    return this._call.inputValues[10].value.toBigInt();
  }

  get _lastSalePrice(): BigInt {
    return this._call.inputValues[11].value.toBigInt();
  }
}

export class AdminMigrateDataCall__Outputs {
  _call: AdminMigrateDataCall;

  constructor(call: AdminMigrateDataCall) {
    this._call = call;
  }
}

export class BidCall extends EthereumCall {
  get inputs(): BidCall__Inputs {
    return new BidCall__Inputs(this);
  }

  get outputs(): BidCall__Outputs {
    return new BidCall__Outputs(this);
  }
}

export class BidCall__Inputs {
  _call: BidCall;

  constructor(call: BidCall) {
    this._call = call;
  }

  get _itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _bidToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _bidPrice(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _expiration(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class BidCall__Outputs {
  _call: BidCall;

  constructor(call: BidCall) {
    this._call = call;
  }

  get _idx(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BuyCall extends EthereumCall {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get _itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _paymentToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _paymentAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelBidCall extends EthereumCall {
  get inputs(): CancelBidCall__Inputs {
    return new CancelBidCall__Inputs(this);
  }

  get outputs(): CancelBidCall__Outputs {
    return new CancelBidCall__Outputs(this);
  }
}

export class CancelBidCall__Inputs {
  _call: CancelBidCall;

  constructor(call: CancelBidCall) {
    this._call = call;
  }

  get _bidOrderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelBidCall__Outputs {
  _call: CancelBidCall;

  constructor(call: CancelBidCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelListedCall extends EthereumCall {
  get inputs(): CancelListedCall__Inputs {
    return new CancelListedCall__Inputs(this);
  }

  get outputs(): CancelListedCall__Outputs {
    return new CancelListedCall__Outputs(this);
  }
}

export class CancelListedCall__Inputs {
  _call: CancelListedCall;

  constructor(call: CancelListedCall) {
    this._call = call;
  }

  get _itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelListedCall__Outputs {
  _call: CancelListedCall;

  constructor(call: CancelListedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ListCall extends EthereumCall {
  get inputs(): ListCall__Inputs {
    return new ListCall__Inputs(this);
  }

  get outputs(): ListCall__Outputs {
    return new ListCall__Outputs(this);
  }
}

export class ListCall__Inputs {
  _call: ListCall;

  constructor(call: ListCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _mask(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _paymentToken(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _expiration(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class ListCall__Outputs {
  _call: ListCall;

  constructor(call: ListCall) {
    this._call = call;
  }

  get _idx(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class OnERC1155BatchReceivedCall extends EthereumCall {
  get inputs(): OnERC1155BatchReceivedCall__Inputs {
    return new OnERC1155BatchReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155BatchReceivedCall__Outputs {
    return new OnERC1155BatchReceivedCall__Outputs(this);
  }
}

export class OnERC1155BatchReceivedCall__Inputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155BatchReceivedCall__Outputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC1155ReceivedCall extends EthereumCall {
  get inputs(): OnERC1155ReceivedCall__Inputs {
    return new OnERC1155ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155ReceivedCall__Outputs {
    return new OnERC1155ReceivedCall__Outputs(this);
  }
}

export class OnERC1155ReceivedCall__Inputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155ReceivedCall__Outputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseCall extends EthereumCall {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends EthereumCall {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetFarmingContractCall extends EthereumCall {
  get inputs(): SetFarmingContractCall__Inputs {
    return new SetFarmingContractCall__Inputs(this);
  }

  get outputs(): SetFarmingContractCall__Outputs {
    return new SetFarmingContractCall__Outputs(this);
  }
}

export class SetFarmingContractCall__Inputs {
  _call: SetFarmingContractCall;

  constructor(call: SetFarmingContractCall) {
    this._call = call;
  }

  get _farmingContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFarmingContractCall__Outputs {
  _call: SetFarmingContractCall;

  constructor(call: SetFarmingContractCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetKingLiveExchangeContractCall extends EthereumCall {
  get inputs(): SetKingLiveExchangeContractCall__Inputs {
    return new SetKingLiveExchangeContractCall__Inputs(this);
  }

  get outputs(): SetKingLiveExchangeContractCall__Outputs {
    return new SetKingLiveExchangeContractCall__Outputs(this);
  }
}

export class SetKingLiveExchangeContractCall__Inputs {
  _call: SetKingLiveExchangeContractCall;

  constructor(call: SetKingLiveExchangeContractCall) {
    this._call = call;
  }

  get _kingLiveExchangeContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetKingLiveExchangeContractCall__Outputs {
  _call: SetKingLiveExchangeContractCall;

  constructor(call: SetKingLiveExchangeContractCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetReferralContractCall extends EthereumCall {
  get inputs(): SetReferralContractCall__Inputs {
    return new SetReferralContractCall__Inputs(this);
  }

  get outputs(): SetReferralContractCall__Outputs {
    return new SetReferralContractCall__Outputs(this);
  }
}

export class SetReferralContractCall__Inputs {
  _call: SetReferralContractCall;

  constructor(call: SetReferralContractCall) {
    this._call = call;
  }

  get _referralContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetReferralContractCall__Outputs {
  _call: SetReferralContractCall;

  constructor(call: SetReferralContractCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetSystemFeeCall extends EthereumCall {
  get inputs(): SetSystemFeeCall__Inputs {
    return new SetSystemFeeCall__Inputs(this);
  }

  get outputs(): SetSystemFeeCall__Outputs {
    return new SetSystemFeeCall__Outputs(this);
  }
}

export class SetSystemFeeCall__Inputs {
  _call: SetSystemFeeCall;

  constructor(call: SetSystemFeeCall) {
    this._call = call;
  }

  get _marketFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _firstSellFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _artistLoyaltyFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _referralFee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetSystemFeeCall__Outputs {
  _call: SetSystemFeeCall;

  constructor(call: SetSystemFeeCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetWhiteListPayableTokenCall extends EthereumCall {
  get inputs(): SetWhiteListPayableTokenCall__Inputs {
    return new SetWhiteListPayableTokenCall__Inputs(this);
  }

  get outputs(): SetWhiteListPayableTokenCall__Outputs {
    return new SetWhiteListPayableTokenCall__Outputs(this);
  }
}

export class SetWhiteListPayableTokenCall__Inputs {
  _call: SetWhiteListPayableTokenCall;

  constructor(call: SetWhiteListPayableTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _status(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetWhiteListPayableTokenCall__Outputs {
  _call: SetWhiteListPayableTokenCall;

  constructor(call: SetWhiteListPayableTokenCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferOwnershipCall extends EthereumCall {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnPauseCall extends EthereumCall {
  get inputs(): UnPauseCall__Inputs {
    return new UnPauseCall__Inputs(this);
  }

  get outputs(): UnPauseCall__Outputs {
    return new UnPauseCall__Outputs(this);
  }
}

export class UnPauseCall__Inputs {
  _call: UnPauseCall;

  constructor(call: UnPauseCall) {
    this._call = call;
  }
}

export class UnPauseCall__Outputs {
  _call: UnPauseCall;

  constructor(call: UnPauseCall) {
    this._call = call;
  }
}

export class UpdateBidCall extends EthereumCall {
  get inputs(): UpdateBidCall__Inputs {
    return new UpdateBidCall__Inputs(this);
  }

  get outputs(): UpdateBidCall__Outputs {
    return new UpdateBidCall__Outputs(this);
  }
}

export class UpdateBidCall__Inputs {
  _call: UpdateBidCall;

  constructor(call: UpdateBidCall) {
    this._call = call;
  }

  get _bidId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _bidToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _bidPrice(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _expiration(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _status(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class UpdateBidCall__Outputs {
  _call: UpdateBidCall;

  constructor(call: UpdateBidCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UpdateItemCall extends EthereumCall {
  get inputs(): UpdateItemCall__Inputs {
    return new UpdateItemCall__Inputs(this);
  }

  get outputs(): UpdateItemCall__Outputs {
    return new UpdateItemCall__Outputs(this);
  }
}

export class UpdateItemCall__Inputs {
  _call: UpdateItemCall;

  constructor(call: UpdateItemCall) {
    this._call = call;
  }

  get _itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _mask(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _paymentToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _expiration(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class UpdateItemCall__Outputs {
  _call: UpdateItemCall;

  constructor(call: UpdateItemCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class WithdrawFundsCall extends EthereumCall {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get _beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}
